<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devBoer Labs on devBoer Labs Documentation</title>
    <link>https://docs.devboer.com/</link>
    <description>Recent content in devBoer Labs on devBoer Labs Documentation</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docs.devboer.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Content organization</title>
      <link>https://docs.devboer.com/docs/compose/organize-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/organize-content/</guid>
      <description>&lt;p&gt;This theme is primarily meant for documentation.&lt;/p&gt;&#xA;&lt;h4 id=&#34;documentation&#34; class=link_owner&gt;&#xA;  Documentation&#xA;  &lt;a href=&#34;#documentation&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;By default, the theme will look for all your documentation content within the &lt;code&gt;docs&lt;/code&gt; directory.&lt;/p&gt;&#xA;&lt;p&gt;However, if you would like to have your docs content across multiple directories, please list those directories inside &lt;code&gt;config/_default/params.toml&lt;/code&gt; under &lt;code&gt;docSections&lt;/code&gt; like so:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...&#xA;docSections = [&amp;#34;docs&amp;#34;, &amp;#34;tutorials&amp;#34;]&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Unlike other regular pages, the documentation pages will have a left sidebar. This sidebar will list links to all the pages in the documentation pages. Beneath each link, there will be a collapsible list of &lt;strong&gt;table of contents&#39;&lt;/strong&gt; links. These nested lists will unfold automatically on the active/current page.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shortcodes</title>
      <link>https://docs.devboer.com/docs/compose/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/shortcodes/</guid>
      <description>&lt;p&gt;Instead of writing all your site pages from scratch, Hugo lets you define and use &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Why shortcodes? While markdown is sufficient to produce simple pages, it&#39;s insufficient where complex page structures are needed. Thusly, whenever we need special styling, shortcodes compliment the shortcomings of markdown.&lt;/p&gt;&#xA;&lt;p&gt;This way, you can side step complex html and css boilerplate in your content files.&lt;/p&gt;&#xA;&lt;p&gt;Sometimes, the shortcode will wrap content, sometimes it won&#39;t. When content is wrapped, a closing shortcode tag is needed. Please see the link I provided above and the markdown files for examples. You&#39;ll get the gist pretty quickly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Function</title>
      <link>https://docs.devboer.com/docs/compose/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/search/</guid>
      <description>&lt;p&gt;Firstly, ensure you have these lines inside your hugo.toml file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nx&#34;&gt;home&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;HTML&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;RSS&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;JSON&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Compose implements &lt;a href=&#34;https://fusejs.io/&#34;&gt;Fuse js&lt;/a&gt; or &lt;a href=&#34;https://www.algolia.com/doc/rest-api/search/&#34;&gt;Algolia&lt;/a&gt; to enable search functionality. By default Fuse is applied. Algolia can be enabled by adding this settings to &lt;code&gt;config/_default/params.toml&lt;/code&gt; file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# search&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;algolia&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# if false search will default to fusejs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Q40WQQX84U&amp;#34;&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# Application ID&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;compose&amp;#34;&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# Index name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;da87401a458102ec6bbd6cc5e5cf8d95&amp;#34;&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# Search-Only API Key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both search engines will display results using the same UI. By choosing the default (.ie fuse js),  you will be opting for local search. This way, no additional setup is needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mermaid</title>
      <link>https://docs.devboer.com/docs/compose/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/mermaid/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;Mermaid&lt;/a&gt; is library that helps you generate diagrams, flowcharts, and piecharts  from text in a similar manner as markdown.&lt;/p&gt;&#xA;&lt;p&gt;With compose theme, you can use mermaid using a custom shortcode as follows:&lt;/p&gt;&#xA;&lt;h3 id=&#34;sequence-diagrams&#34; class=link_owner&gt;&#xA;  Sequence Diagrams&#xA;  &lt;a href=&#34;#sequence-diagrams&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tpl&#34; data-lang=&#34;tpl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;mermaid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;sequenceDiagram&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  participant Alice&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  participant Bob&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  Alice-&amp;gt;&amp;gt;John: Hello John, how are you?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  loop Healthcheck&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;      John-&amp;gt;&amp;gt;John: Fight against hypochondria&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  Note right of John: Rational thoughts&amp;lt;br/&amp;gt;prevail...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  John--&amp;gt;&amp;gt;Alice: Great!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  John-&amp;gt;&amp;gt;Bob: How about you?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;  Bob--&amp;gt;&amp;gt;John: Jolly good!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mermaid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Graphs, charts &amp; dynamic tables</title>
      <link>https://docs.devboer.com/docs/compose/graphs-charts-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/graphs-charts-tables/</guid>
      <description>&lt;p&gt;Using &lt;a href=&#34;https://www.chartjs.org/&#34;&gt;chart js library&lt;/a&gt; you can display data you have stored in a &lt;code&gt;csv&lt;/code&gt; file as a pie chart, bar graph or doughnut chart.&lt;/p&gt;&#xA;&lt;p&gt;At this point if you want to display data from a json or yaml file, you would need to &lt;a href=&#34;http://convertcsv.com/json-to-csv.htm&#34;&gt;convert it into csv&lt;/a&gt; first. Else the template will error out.&lt;/p&gt;&#xA;&lt;p&gt;Once you have a csv file, you display the charts as follows:&lt;/p&gt;&#xA;&lt;h4 id=&#34;show-a-pie-doughnut--bar-chart-at-once&#34; class=link_owner&gt;&#xA;  Show a pie, doughnut &amp;amp; bar chart at once&#xA;  &lt;a href=&#34;#show-a-pie-doughnut--bar-chart-at-once&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;Firstly define the data you want to display from the front matter:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Customize layouts &amp; components</title>
      <link>https://docs.devboer.com/docs/compose/customize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/docs/compose/customize/</guid>
      <description>&lt;h3 id=&#34;shortcodes-modifiers&#34; class=link_owner&gt;&#xA;  Shortcodes modifiers&#xA;  &lt;a href=&#34;#shortcodes-modifiers&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;These modifiers are classes you can use with shortcodes to customize the look and feel of your layouts and components.&lt;/p&gt;&#xA;&lt;h4 id=&#34;grid&#34; class=link_owner&gt;&#xA;  Grid&#xA;  &lt;a href=&#34;#grid&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;modifier&lt;/th&gt;&#xA;          &lt;th&gt;space&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;grid-2&lt;/td&gt;&#xA;          &lt;td&gt;2 columns&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;grid-3&lt;/td&gt;&#xA;          &lt;td&gt;3 columns&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;grid-4&lt;/td&gt;&#xA;          &lt;td&gt;4 columns&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;spacing&#34; class=link_owner&gt;&#xA;  Spacing&#xA;  &lt;a href=&#34;#spacing&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;modifier&lt;/th&gt;&#xA;          &lt;th&gt;space&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mt-1&lt;/td&gt;&#xA;          &lt;td&gt;1.5rem top margin&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mt-2&lt;/td&gt;&#xA;          &lt;td&gt;3rem top margin&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mt-3&lt;/td&gt;&#xA;          &lt;td&gt;4.5rem top margin&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mt-4&lt;/td&gt;&#xA;          &lt;td&gt;6rem top margin&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;use pt-1 ~ pt-4 for top padding&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lxc Privilege Conversion</title>
      <link>https://docs.devboer.com/guides/lxc-guides/lxc-privilege-conversion/</link>
      <pubDate>Sat, 27 Sep 2025 20:19:13 -0500</pubDate>
      <guid>https://docs.devboer.com/guides/lxc-guides/lxc-privilege-conversion/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt; Align privileged LXC Jellyfin container&#39;s permissions with unprivileged Servarr companion services.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Catalyst&lt;/strong&gt; Since, I have introduced Servarr, I was having wonky issues with Jellyfin losing controls over its media. And, I learned privileged containers means same IDs as host, I had to remedy this pronto!&lt;/p&gt;&#xA;&lt;p&gt;So far, I have learned, PVE 9 doesn’t have un|shift pct command nor uidmappingshift (something like this) to convert LXC container from privileged to unprivileged.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GPU and unprivileged LXC</title>
      <link>https://docs.devboer.com/guides/lxc-guides/bind-gpu-to-unprivileged-lxc/</link>
      <pubDate>Wed, 28 Aug 2024 01:01:28 -0500</pubDate>
      <guid>https://docs.devboer.com/guides/lxc-guides/bind-gpu-to-unprivileged-lxc/</guid>
      <description>&lt;h1 id=&#34;bind-gpu-to-unprivileged-lxc&#34; class=link_owner&gt;&#xA;  Bind GPU to Unprivileged LXC&#xA;  &lt;a href=&#34;#bind-gpu-to-unprivileged-lxc&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;tutorials-used&#34; class=link_owner&gt;&#xA;  Tutorials Used:&#xA;  &lt;a href=&#34;#tutorials-used&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://theorangeone.net/posts/lxc-nvidia-gpu-passthrough/&#34;&gt;TheOrangeOne.net&lt;/a&gt;&#xA;&#xA;&lt;div class=&#34;video&#34;&gt;&#xA;  &lt;iframe src=&#34;https://www.youtube.com/embed/-Us8KPOhOCY?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-Us8KPOhOCY&#34;&gt;YouTube Video using above tutorial&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://virtualizeeverything.com/2022/05/18/passing-usb-storage-drive-to-proxmox-lxc/&#34;&gt;Mount Storage&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.maybeits.us&#34;&gt;Karvec&lt;/a&gt; suggesting libnvidia-encode/decode on guestOS and learned to use -### corresponding with driver version&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;proxmox-setup&#34; class=link_owner&gt;&#xA;  Proxmox Setup&#xA;  &lt;a href=&#34;#proxmox-setup&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Update Proxmox &amp;amp; Reboot&lt;/li&gt;&#xA;&lt;li&gt;Install pve-headers &amp;amp; build-essentials&lt;/li&gt;&#xA;&lt;li&gt;update-initramfs&lt;/li&gt;&#xA;&lt;li&gt;blacklist free nvidia driver&lt;/li&gt;&#xA;&lt;li&gt;download official nvidia driver&lt;/li&gt;&#xA;&lt;li&gt;chmod +x driver&lt;/li&gt;&#xA;&lt;li&gt;./run install&lt;/li&gt;&#xA;&lt;li&gt;install 32-bit also&lt;/li&gt;&#xA;&lt;li&gt;ignore other prompts&lt;/li&gt;&#xA;&lt;li&gt;edit modules.d files for loading and conf&lt;/li&gt;&#xA;&lt;li&gt;create a rules file&lt;/li&gt;&#xA;&lt;li&gt;reboot&lt;/li&gt;&#xA;&lt;li&gt;verify driver is working with &lt;code&gt;nvidia-smi&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;also could try &lt;code&gt;lshw -C display&lt;/code&gt; this will list driver it should say &#39;nvidia&#39;&lt;/li&gt;&#xA;&lt;li&gt;Create CT with ubuntu compatible with jellyfin (18, 20, 22 not 22.10 work)&lt;/li&gt;&#xA;&lt;li&gt;Do not start CT on creation&lt;/li&gt;&#xA;&lt;li&gt;Edit CT conf file with&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Allow cgroup access&#xA;lxc.cgroup.devices.allow: c 195:* rwm&#xA;lxc.cgroup.devices.allow: c 243:* rwm&#xA;&#xA;# Pass through device files&#xA;lxc.mount.entry: /dev/nvidia0 dev/nvidia0 none bind,optional,create=file&#xA;lxc.mount.entry: /dev/nvidiactl dev/nvidiactl none bind,optional,create=file&#xA;lxc.mount.entry: /dev/nvidia-uvm dev/nvidia-uvm none bind,optional,create=file&#xA;lxc.mount.entry: /dev/nvidia-modeset dev/nvidia-modeset none bind,optional,create=file&#xA;lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-uvm-tools none bind,optional,create=file&#xA;&#xA;&#xA;&lt;div class=&#34;tip&#34;&gt;&#xA;  &lt;blockquote&gt;&#xA;&lt;p&gt;==&#39;cgroup access&#39;== part corresponds with the character files below in ==&#39;device files&#39;==&lt;br&gt;&#xA;&amp;quot;195:*&amp;quot; is using a wildcard for the device files. You can also write in this number too.&lt;br&gt;&#xA;Also you can write in more IDs if you notice it changing on reboots to make certain you don&#39;t lose passthrough access.&lt;br&gt;&#xA;Find these IDs using ls -l /dev/nv* and ignore &#39;caps&#39; files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emoji Support</title>
      <link>https://docs.devboer.com/blog/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/blog/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a New Theme</title>
      <link>https://docs.devboer.com/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/blog/creating-a-new-theme/</guid>
      <description>&lt;h2 id=&#34;introduction&#34; class=link_owner&gt;&#xA;  Introduction&#xA;  &lt;a href=&#34;#introduction&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;video&#34;&gt;&#xA;  &lt;iframe src=&#34;https://www.youtube.com/embed/aOC8E8z_ifw?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;We&#39;ll start with creating a new site with a very basic template. Then we&#39;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;</description>
    </item>
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://docs.devboer.com/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/blog/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for&#xA;its template engine. It is an extremely lightweight engine that provides a very&#xA;small amount of logic. In our experience that it is just the right amount of&#xA;logic to be able to create a good static website. If you have used other&#xA;template systems from different languages or frameworks you will find a lot of&#xA;similarities in Go templates.&lt;/p&gt;&#xA;&lt;p&gt;This document is a brief primer on using Go templates. The &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;&#xA;provide more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://docs.devboer.com/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/blog/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34; class=link_owner&gt;&#xA;  Step 1. Install Hugo&#xA;  &lt;a href=&#34;#step-1-install-hugo&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo releases&lt;/a&gt; and download the&#xA;appropriate version for your OS and architecture.&lt;/p&gt;&#xA;&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;&#xA;&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-2-build-the-docs&#34; class=link_owner&gt;&#xA;  Step 2. Build the Docs&#xA;  &lt;a href=&#34;#step-2-build-the-docs&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Hugo has its own example site which happens to also be the documentation site&#xA;you are reading right now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://docs.devboer.com/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>https://docs.devboer.com/blog/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34; class=link_owner&gt;&#xA;  Move static content to &lt;code&gt;static&lt;/code&gt;&#xA;  &lt;a href=&#34;#move-static-content-to-static&#34; class=&#34;link icon&#34;&gt;&#xA;    &lt;svg&gt;&#xA;      &lt;use xlink:href=&#34;#anchor-link&#34;&gt;&lt;/use&gt;&#xA;    &lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.&#xA;With Jekyll, something that looked like&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xA;    ▾ images/&#xA;        logo.png&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;should become&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xA;    ▾ static/&#xA;        ▾ images/&#xA;            logo.png&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Additionally, you&#39;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
